2020-09-21 00:00:00 [main] - Tomcat started on port(s): 8080 (http) with context path ''
2020-09-21 00:00:00 [main] - Triggering deferred initialization of Spring Data repositories…
2020-09-21 00:00:00 [http-nio-8080-exec-1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-21 00:00:00 [http-nio-8080-exec-1] - Initializing Servlet 'dispatcherServlet'
2020-09-21 00:00:00 [http-nio-8080-exec-1] - Completed initialization in 46 ms
2020-09-21 00:00:00 [main] - Spring Data repositories initialized!
2020-09-21 00:00:00 [main] - Started CarCatalogApiApplication in 5.378 seconds (JVM running for 6.666)
2020-09-21 00:00:08 [main] - Starting CarCatalogApiApplication on DESKTOP-9NCNHU8 with PID 7712 (E:\CarCatalogAPI\CarCatalogAPI\out\production\classes started by Deti in E:\CarCatalogAPI\CarCatalogAPI)
2020-09-21 00:00:08 [main] - No active profile set, falling back to default profiles: default
2020-09-21 00:00:09 [main] - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-21 00:00:09 [main] - Finished Spring Data repository scanning in 49ms. Found 1 JPA repository interfaces.
2020-09-21 00:00:10 [main] - Tomcat initialized with port(s): 8080 (http)
2020-09-21 00:00:10 [main] - Starting service [Tomcat]
2020-09-21 00:00:10 [main] - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-21 00:00:10 [main] - Initializing Spring embedded WebApplicationContext
2020-09-21 00:00:10 [main] - Root WebApplicationContext: initialization completed in 1671 ms
2020-09-21 00:00:11 [main] - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-21 00:00:11 [main] - HikariPool-1 - Starting...
2020-09-21 00:00:11 [main] - HikariPool-1 - Start completed.
2020-09-21 00:00:11 [task-1] - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-21 00:00:11 [task-1] - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-21 00:00:11 [task-1] - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-21 00:00:11 [task-1] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2020-09-21 00:00:12 [task-1] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-21 00:00:12 [task-1] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-21 00:00:13 [main] - Tomcat started on port(s): 8080 (http) with context path ''
2020-09-21 00:00:13 [main] - Triggering deferred initialization of Spring Data repositories…
2020-09-21 00:00:13 [main] - Spring Data repositories initialized!
2020-09-21 00:00:13 [main] - Started CarCatalogApiApplication in 5.182 seconds (JVM running for 6.563)
2020-09-21 00:00:13 [http-nio-8080-exec-1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-21 00:00:13 [http-nio-8080-exec-1] - Initializing Servlet 'dispatcherServlet'
2020-09-21 00:00:13 [http-nio-8080-exec-1] - Completed initialization in 19 ms
2020-09-21 00:00:28 [http-nio-8080-exec-7] - GraphQL getAllCars
2020-09-21 00:00:41 [http-nio-8080-exec-4] - GraphQL getAllCars
2020-09-21 00:02:01 [http-nio-8080-exec-8] - DELETE car 19 NO CONTENT
2020-09-21 00:02:01 [http-nio-8080-exec-8] - GraphQL DELETE Car id=19 OK
2020-09-21 00:03:37 [http-nio-8080-exec-10] - GraphQL add Car=null Nissan Murano orange M106CC196 2017 null
2020-09-21 00:03:37 [http-nio-8080-exec-10] - POST car 20 Nissan Murano orange M106CC196 2017 2020-09-21 00:03:37.311 CREATED
2020-09-21 00:03:37 [http-nio-8080-exec-10] - GraphQL ADD Car CREATED car=20 Nissan Murano orange M106CC196 2017 2020-09-21 00:03:37.311
2020-09-21 00:03:55 [http-nio-8080-exec-7] - Query failed to validate : '# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that starts
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)
#
#       Run Query:  Ctrl-Enter (or press the play button above)
#
#   Auto Complete:  Ctrl-Space (or just start typing)
#

{
  car {
    id
  }
}'
2020-09-21 00:04:28 [http-nio-8080-exec-7] - GraphQL getAllCars
2020-09-21 00:05:03 [http-nio-8080-exec-7] - GraphQL getAllCarsByParams
2020-09-21 00:05:03 [http-nio-8080-exec-7] - GET allCars OK
2020-09-21 00:05:38 [http-nio-8080-exec-10] - GraphQL getAllCarsByParams
2020-09-21 00:05:38 [http-nio-8080-exec-10] - GET allCars OK
2020-09-21 00:05:44 [http-nio-8080-exec-1] - GraphQL getAllCarsByParams
2020-09-21 00:05:44 [http-nio-8080-exec-1] - GET allCars OK
2020-09-21 00:05:47 [http-nio-8080-exec-6] - GraphQL getAllCarsByParams
2020-09-21 00:06:17 [http-nio-8080-exec-7] - GraphQL getAllCarsByParams
2020-09-21 00:11:56 [http-nio-8080-exec-10] - GraphQL getAllCarsByParams
2020-09-21 00:12:14 [http-nio-8080-exec-3] - GraphQL getAllCars
2020-09-21 00:12:23 [http-nio-8080-exec-7] - GraphQL getAllCars
2020-09-21 00:12:25 [http-nio-8080-exec-1] - GraphQL getAllCars
